frontend FRONT-HTTPS
    bind *:80
    bind *:443 ssl crt /certs
	# comentar abaixo pra desligar o HTTP to HTTPs
    http-request redirect scheme https unless { ssl_fc }
    timeout client 30s
    mode http
    # define cada HOST header a ser filtrado
    acl h1 hdr(host) -i example.com cname.example.com
    acl h2 hdr(host) -i example2.com cname.example2.com
    acl h3 hdr(host) -i webcluster.example.com.br
    #// ACL match *.integra-hml.example.com.br:*
    acl wild1 hdr(host) -m reg -i ^[^\.]+\.integra-hml\.example\.com\.br(:[0-9]+)?$
    # define cada URI as ser filtrada
    acl p1 path_beg -i /subpath-1
    acl p2 path_beg -i /subpath-2
    acl p3 path_beg -i /subpath-3
    acl p4 path_beg -i /bench
    # define a rota backend baseado no acerto por ACLs acima combinadas ou não
    # envia para backend-sub-1 baseado apenas no path uri
    use_backend backend-sub-1 if p1
    # envia para backend-sub-2 se o HOST HEADER for o da acl h1 e o path for p2
    use_backend backend-sub-2 if h1 p2
    use_backend backend-sub-3 if h2 p3
    use_backend balanced-webservers if h3 p4
    # define uma rota default obrigatoria para trafego sem acertos ACL
    default_backend backend-sub-1

backend backend-sub-1
    # definicoes base para timeouts dos backend
    timeout server 30s
	timeout check 10s
    timeout queue 30s
    mode http
    # liga o check HTTP
    option httpchk
    # define a acao em cada Health Check, incluindo o path URI que sera consultado no backend. A URI precisa ser valida e retornar HTTP-200 em GETs
    http-check send meth GET uri /
    # reescreve o PATH repassado para o backend retirando o customizado para o servico (/subpath-1 da request é reescrita para / antes do repasse ao backend)
    http-request set-path %[path,regsub(^/subpath-1,/,g)]
    # server(s) que fazem parte do backend. Em caso de multiplos, definir acima o algoritimo de balandeamento, ex.: balance roundrobin
    server server-a {IP-AQUI}:{PORTA-AQUI} check

backend backend-sub-2
    timeout server 30s
	timeout check 10s
    timeout queue 30s
    mode http
    option httpchk
    http-check send meth GET uri /
    http-request set-path %[path,regsub(^/subpath-2,/,g)]
    server server-b {IP-AQUI}:{PORTA-AQUI} check

backend backend-sub-3
    timeout server 
	timeout check 10s
    timeout queue 30s
    mode http
    option httpchk
    http-check send meth GET uri /
    http-request set-path %[path,regsub(^/subpath-3,/,g)]
    server server-c {IP-AQUI}:{PORTA-AQUI} check

backend balanced-webservers
    timeout server 30s
    timeout check 10s
    timeout queue 30s
    mode http
    option httpchk
    balance roundrobin
    http-check send meth GET  uri /
    http-request set-path %[path,regsub(^/bench,/,g)]
    server nginx-bench01 10.199.4.131:8080 check maxconn 50
    server nginx-bench02 10.199.4.131:8081 check maxconn 50
    server nginx-bench03 10.199.4.131:8082 check maxconn 50
    server nginx-bench04 10.199.4.132:80 check maxconn 50
    server nginx-bench05 10.199.4.143:80 check maxconn 50

backend persist-param-based
    option httpchk
    use-server srv-integrationa if { urlp(app) -i a }
    use-server srv-integrationb if { urlp(app) -i b }
    use-server srv-integrationc if { urlp(app) -i c }
    use-server srv-integrationd if { urlp(app) -i d }
    http-check send meth GET  uri /
    server srv-integrationa 10.199.4.131:8080 check maxconn 50
    server srv-integrationb 10.199.4.131:8081 check maxconn 50
    server srv-integrationc 10.199.4.131:8082 check maxconn 50
    server srv-integrationd 10.199.4.131:8083 check maxconn 50

backend persist-host-based
    option httpchk
    use-server srv-integrationa if { hdr(host) -i a.integra-hml.example.com.br }
    use-server srv-integrationb if { hdr(host) -i b.integra-hml.example.com.br }
    use-server srv-integrationc if { hdr(host) -i c.integra-hml.example.com.br }
    use-server srv-integrationd if { hdr(host) -i d.integra-hml.example.com.br }
    use-server srv-integrationd if { hdr(host) -i e.integra-hml.example.com.br }
    http-check send meth GET  uri /
    server srv-integrationa 10.199.4.131:8080 check maxconn 50
    server srv-integrationb 10.199.4.131:8081 check maxconn 50
    server srv-integrationc 10.199.4.131:8082 check maxconn 50
    server srv-integrationd 10.199.4.131:8083 check maxconn 50

backend appContainersWild1
    option httpchk
    use-server srv-integrationa if { hdr(host) -m reg -i a.integra-hml.example.com.br(:[0-9]+)?$ }
    use-server srv-integrationb if { hdr(host) -m reg -i b.integra-hml.example.com.br(:[0-9]+)?$ }
    use-server srv-integrationc if { hdr(host) -m reg -i c.integra-hml.example.com.br(:[0-9]+)?$ }
    use-server srv-integrationd if { hdr(host) -m reg -i d.integra-hml.example.com.br(:[0-9]+)?$ }
    use-server srv-integrationd if { hdr(host) -m reg -i e.integra-hml.example.com.br(:[0-9]+)?$ }
    http-check send meth GET  uri /
    server srv-integrationa 10.199.4.131:8080 check observe layer4 error-limit 15 on-error mark-down
    server srv-integrationb 10.199.4.131:8081 check observe layer4 error-limit 15 on-error mark-down
    server srv-integrationc 10.199.4.131:8082 check observe layer4 error-limit 15 on-error mark-down
    server srv-integrationd 10.199.4.131:8083 check observe layer4 error-limit 15 on-error mark-down

backend appDockerTLScustomCAcertEgPassbolt
    # option httpchk
    option forwardfor
    server srv-passbolt passbolt:443 ssl verify required ca-file /CAs/local.lan.CA.pem sni req.hdr(Host) check observe layer4 error-limit 20 on-error mark-down

##
# Não insira nada a partir daqui. Manter pelo menos 2 quebras de linha sempre no final, apos esse comentario


