name: IaC restart Grafana Loki SSD
on:
  workflow_dispatch:
  push:
    paths:
      - 'loki-config.yaml'
      - 'nginx.conf'
      - 'nginx.d/**'
      - 'prometheus.yml'

env:
  STACK_DIR: '~/docker/grafana-loki-ssd'

jobs:
  rsync-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repo
        uses: actions/checkout@v4

      - name: Prepare Runner
        run: |
          apt update && apt-get install -y rsync

      - name: Deploy Grafana Loki to Docker Server
        uses: easingthemes/ssh-deploy@main
        with:
          ARGS: "-rlgoDzvc -i --delete"
          SSH_PRIVATE_KEY: ${{ secrets.PC_HOST_KEY }}
          REMOTE_USER: ${{ secrets.PC_HOST_USER }}
          REMOTE_HOST: ${{ vars.PC_HOST }}
          SOURCE: "/"
          TARGET: "${{ env.STACK_DIR}}/"
          EXCLUDE: "logs/, .git*"
          SCRIPT_BEFORE: |
            echo "Current compose services"
            cd ${{ env.STACK_DIR}}/ || exit 2
            docker compose ps
          SCRIPT_AFTER: |
            cd ${{ env.STACK_DIR}}/ || exit 2
            chmod 600 .*.env
            chmod 660 .grafana.env
            chmod 660 .minio.env
            chmod 660 certs/angel*
            chmod 644 loki-config.yaml
            chmod 644 prometheus.yml
            chmod 660 docker-compose.yaml
            chmod 755 nginx.conf
            chmod -R 755 nginx.d/
            #setfacl -m u:472:6 ldap.toml
            sleep 1
            docker compose restart read
            docker compose restart write
            sleep 5
            docker compose restart gateway
            sleep 2
            docker compose restart backend
            docker compose restart prometheus
            docker compose restart grafana
            rm -f local_ssh_script-before-*
