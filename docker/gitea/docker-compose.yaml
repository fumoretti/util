networks:
  gitea: {}

volumes:
  db-data: {}
  gitea-data: {}
  drone-data: {}
  gitea-act-data: {}

services:
  gitea:
    image: gitea/gitea:1.22
    container_name: gitea-server
    restart: unless-stopped
    networks:
      - gitea
    ports:
      - "3000:3000"
      - "3022:22"
    volumes:
      - gitea-data:/data
      - /etc/localtime:/etc/localtime:ro
    env_file:
      - .gitea.env
    depends_on:
      - db

  db:
    image: mariadb:10.4-focal
    container_name: gitea-db
    restart: unless-stopped
    networks:
      - gitea
    volumes:
      - db-data:/var/lib/mysql
    env_file:
      - .mariadb.env

  ## recommended Gitea Actions Runner
  # runner:
  #   image: gitea/act_runner:0.2.11
  #   restart: unless-stopped
  #   networks:
  #     - gitea
  #   environment:
  #     CONFIG_FILE: /config.yaml
  #     GITEA_INSTANCE_URL: http://gitea:3000
  #     GITEA_RUNNER_REGISTRATION_TOKEN: create-runner-and-pick-token-from-gitea-web-ui
  #     GITEA_RUNNER_NAME: act-docker
  #     GITEA_RUNNER_LABELS: act-docker
  #   volumes:
  #     - ./runner-config.yaml:/config.yaml
  #     - gitea-act-data:/data
  #     - /etc/ssl/certs/ca-certificates.crt:/etc/ssl/certs/ca-certificates.crt:ro
  #     - /var/run/docker.sock:/var/run/docker.sock
  
  # optional drone-ci services
  # drone:
  #   image: drone/drone:2
  #   container_name: drone-ci
  #   restart: unless-stopped
  #   networks:
  #     - gitea
  #   ports:
  #     - 4443:443
  #     - 18080:80
  #   volumes:
  #     - drone-data:/data
  #     - /etc/localtime:/etc/localtime:ro
  #   env_file:
  #     - .drone.env
  #   depends_on:
  #     - gitea

  # runnerd:
  #   image: drone/drone-runner-docker:1
  #   container_name: drone-runner-docker
  #   restart: unless-stopped
  #   networks:
  #     - gitea
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #     - /etc/localtime:/etc/localtime:ro
  #   env_file:
  #     - .drone-runner-docker.env
  #   depends_on:
  #     - drone
  

