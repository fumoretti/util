input {

  stdin{

    add_field => { "[event][dataset]" => "stdin" }
    
  }

}

filter {

#fortinet firewall logs filter processor
# for log samples: https://docs.fortinet.com/document/fortigate/6.2.15/cookbook/986892/sample-logs-by-log-type
   
   if "stdin" in [event][dataset] {

    kv { 
        source => "message"
        field_split => " "
        value_split => "="
        trim_key => " "
        trim_value => "\\\""
    }
    
    #validate eventtime field lenght to convert UNIX NS or UNIX into readable timestamp
    ruby {
        code => "event.set('eventtime_length', event.get('eventtime').length)"
    }

    if [eventtime_length] > 11 {

      #do NS to UNIX convertion
      ruby {
        code => "
            event.set('[eventtime_ns_str]', (Time.at( (event.get('[eventtime]')[0...10]).to_i ).to_datetime).strftime('%Y-%m-%dT%H:%M:%S.') + event.get('[eventtime]')[-9..-1] +'Z' )
            event.set('[@timestamp]', LogStash::Timestamp.new(event.get('[eventtime_ns_str]')) )
        "
        remove_field => [ "eventtime_ns_str", "eventtime_length", "message" ]
      }

    } else {
      #do a normal date conversion
      date {
        match => ["eventtime" , "UNIX", "ISO8601"]
        target => "@timestamp"
        remove_field => [ "eventtime_length" , "message" ]
      }

    }

    clone { clones => [ "to_opensearch" ]}

   }

}

output {

  # split out in two outputs, opensearch and elasticsearch based on tags
  if "stdin" in [event][dataset] and "to_opensearch" in [tags] {
  #add opensearch out
    stdout {
        codec => "json"
    }
  
  } else {
  #add elasticsearch out, by default just dump json
    stdout {
        codec => "json"
    }

  }

}
